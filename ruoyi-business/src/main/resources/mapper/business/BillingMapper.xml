<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.BillingMapper">

    <resultMap type="com.ruoyi.business.domain.Billing" id="BillingResult">
            <result property="id" column="id"/>
            <result property="templateName" column="template_name"/>
            <result property="remark" column="remark"/>
            <result property="createBy" column="create_by"/>
            <result property="createTime" column="create_time"/>
            <result property="updateBy" column="update_by"/>
            <result property="updateTime" column="update_time"/>
            <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <resultMap id="BillingBillingDetailResult" type="com.ruoyi.business.domain.Billing" extends="BillingResult">
        <collection property="billingDetailList" notNullColumn="sub_id"
                    javaType="java.util.List" resultMap="BillingDetailResult"/>
    </resultMap>

    <resultMap type="com.ruoyi.business.domain.BillingDetail" id="BillingDetailResult">
            <result property="id" column="sub_id"/>
            <result property="billingName" column="sub_billing_name"/>
            <result property="templateId" column="sub_template_id"/>
            <result property="expenseType" column="sub_expense_type"/>
            <result property="materialCategoryId" column="sub_material_category_id"/>
            <result property="materialSpecId" column="sub_material_spec_id"/>
            <result property="unit" column="sub_unit"/>
            <result property="unitPrice" column="sub_unit_price"/>
            <result property="rate" column="sub_rate"/>
            <result property="remark" column="sub_remark"/>
            <result property="createBy" column="sub_create_by"/>
            <result property="createTime" column="sub_create_time"/>
            <result property="updateBy" column="sub_update_by"/>
            <result property="updateTime" column="sub_update_time"/>
            <result property="isDeleted" column="sub_is_deleted"/>
    </resultMap>

    <sql id="selectBillingVo">
        select id, template_name, remark, create_by, create_time, update_by, update_time, is_deleted
        from billing
    </sql>

    <select id="selectBillingList" parameterType="Billing" resultMap="BillingResult">
        <include refid="selectBillingVo"/>
        <where>
                        <if test="templateName != null  and templateName != ''">
                            and template_name like concat('%', #{templateName}, '%')
                        </if>
                        <if test="isDeleted != null ">
                            and is_deleted = #{isDeleted}
                        </if>
        </where>
    </select>

    <select id="selectBillingById" parameterType="Long"
            resultMap="BillingBillingDetailResult">
            select a.id, a.template_name, a.remark, a.create_by, a.create_time, a.update_by, a.update_time, a.is_deleted,
 b.id as
                sub_id, b.billing_name as
                sub_billing_name, b.template_id as
                sub_template_id, b.expense_type as
                sub_expense_type, b.material_category_id as sub_material_category_id,
        b.material_spec_id as sub_material_spec_id,b.unit as
                sub_unit, b.unit_price as
                sub_unit_price, b.rate as
                sub_rate, b.remark as
                sub_remark, b.create_by as
                sub_create_by, b.create_time as
                sub_create_time, b.update_by as
                sub_update_by, b.update_time as
                sub_update_time, b.is_deleted as
                sub_is_deleted
            from billing a
            left join billing_detail b on b.template_id = a.id
            where a.id = #{id}
    </select>

    <insert id="insertBilling" parameterType="Billing" useGeneratedKeys="true"
            keyProperty="id">
        insert into billing
        <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="templateName != null and templateName != ''">template_name,
                    </if>
                    <if test="remark != null">remark,
                    </if>
                    <if test="createBy != null">create_by,
                    </if>
                    <if test="createTime != null">create_time,
                    </if>
                    <if test="updateBy != null">update_by,
                    </if>
                    <if test="updateTime != null">update_time,
                    </if>
                    <if test="isDeleted != null">is_deleted,
                    </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                    <if test="templateName != null and templateName != ''">#{templateName},
                    </if>
                    <if test="remark != null">#{remark},
                    </if>
                    <if test="createBy != null">#{createBy},
                    </if>
                    <if test="createTime != null">#{createTime},
                    </if>
                    <if test="updateBy != null">#{updateBy},
                    </if>
                    <if test="updateTime != null">#{updateTime},
                    </if>
                    <if test="isDeleted != null">#{isDeleted},
                    </if>
        </trim>
    </insert>

    <update id="updateBilling" parameterType="Billing">
        update billing
        <trim prefix="SET" suffixOverrides=",">
                    <if test="templateName != null and templateName != ''">template_name =
                        #{templateName},
                    </if>
                    <if test="remark != null">remark =
                        #{remark},
                    </if>
                    <if test="createBy != null">create_by =
                        #{createBy},
                    </if>
                    <if test="createTime != null">create_time =
                        #{createTime},
                    </if>
                    <if test="updateBy != null">update_by =
                        #{updateBy},
                    </if>
                    <if test="updateTime != null">update_time =
                        #{updateTime},
                    </if>
                    <if test="isDeleted != null">is_deleted =
                        #{isDeleted},
                    </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBillingById" parameterType="Long">
        delete from billing where id = #{id}
    </delete>

    <delete id="deleteBillingByIds" parameterType="String">
        delete from billing where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteBillingDetailByTemplateIds" parameterType="String">
        delete from billing_detail where template_id in
        <foreach item="templateId" collection="array" open="(" separator="," close=")">
            #{templateId}
        </foreach>
    </delete>

    <delete id="deleteBillingDetailByTemplateId" parameterType="Long">
        delete from billing_detail where template_id = #{templateId}
    </delete>

    <insert id="batchBillingDetail">
        insert into billing_detail
        ( id        , billing_name        , template_id        , expense_type        ,material_category_id, material_spec_id,unit        , unit_price        , rate        , remark        , create_by        , create_time        , update_by        , update_time        , is_deleted) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id
            }, #{item.billingName
            }, #{item.templateId
            }, #{item.expenseType
            }, #{item.materialCategoryId
            }, #{item.materialSpecId
            }, #{item.unit
            }, #{item.unitPrice
            }, #{item.rate
            }, #{item.remark
            }, #{item.createBy
            }, #{item.createTime
            }, #{item.updateBy
            }, #{item.updateTime
            }, #{item.isDeleted
            })
        </foreach>
    </insert>
</mapper>