<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.InventoryMapper">

    <resultMap type="com.ruoyi.business.domain.vo.InventoryResultVo" id="InventoryResult">
        <result property="id" column="id"/>
        <result property="businessDate" column="business_date"/>
        <result property="flowNo" column="flow_no"/>
        <result property="businessNo" column="business_no"/>
        <result property="contractId" column="contract_id"/>
        <result property="stockType" column="stock_type"/>
        <result property="carRentalFee" column="car_rental_fee"/>
        <result property="loadingFee" column="loading_fee"/>
        <result property="unloadingFee" column="unloading_fee"/>
        <result property="origin" column="origin"/>
        <result property="destination" column="destination"/>
        <result property="transportationUnitPrice" column="transportation_unit_price"/>
        <result property="transportUnit" column="transport_unit"/>
        <result property="carNumber" column="car_number"/>
        <result property="freight" column="freight"/>
        <result property="lessorTheoreticalWeight" column="lessor_theoretical_weight"/>
        <result property="supplierTheoreticalWeight" column="supplier_theoretical_weight"/>
        <result property="warehouseWeight" column="warehouse_weight"/>
        <result property="sceneWeight" column="scene_weight"/>
        <result property="totalMiscelFee" column="total_miscel_fee"/>
        <result property="operator" column="operator"/>
        <result property="resources" column="resources"/>
        <result property="remark" column="remark"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <resultMap id="InventoryInventoryDetailResult" type="com.ruoyi.business.domain.vo.InventoryResultVo" extends="InventoryResult">
        <collection property="inventoryDetailList" notNullColumn="sub_id"
                    javaType="java.util.List" resultMap="InventoryDetailResult"/>
    </resultMap>
    <resultMap type="com.ruoyi.business.domain.vo.InventoryFeeVo" id="InventoryFeeResult">
        <result property="id" column="sub2_id"/>
        <result property="inventoryId" column="sub2_inventory_id"/>
        <result property="name" column="sub2_name"/>
        <result property="specsName" column="sub2_specs_name"/>
        <result property="unit" column="sub2_unit"/>
        <result property="unitPrice" column="sub2_unit_price"/>
        <result property="materialCategoryId" column="sub2_material_category_id"/>
        <result property="materialSpecId" column="sub2_material_spec_id"/>
        <result property="feeId" column="sub2_fee_id"/>
        <result property="receivedCount" column="sub2_received_count"/>
        <result property="chargedCount" column="sub2_charged_count"/>
        <result property="totalAmount" column="sub2_total_amount"/>
        <result property="remark" column="sub2_remark"/>
    </resultMap>

    <resultMap type="com.ruoyi.business.domain.vo.InventoryDetailVo" id="InventoryDetailResult">
        <result property="id" column="sub2_id"/>
        <result property="inventoryId" column="sub_inventory_id"/>
        <result property="externalContractId" column="sub_external_contract_id"/>
        <result property="name" column="sub_name"/>
        <result property="specsName" column="sub_specs_name"/>
        <result property="material" column="sub_material"/>
        <result property="feeId" column="sub_fee_id"/>
        <result property="units" column="sub_units"/>
        <result property="packages" column="sub_packages"/>
        <result property="singleWeight" column="sub_single_weight"/>
        <result property="packagesNumber" column="sub_packages_number"/>
        <result property="materialCategoryId" column="sub_material_category_id"/>
        <result property="materialSpecId" column="sub_material_spec_id"/>
        <result property="materialQuantity" column="sub_material_quantity"/>
        <result property="defaultWeight" column="sub_default_weight"/>
        <result property="total" column="sub_total"/>
        <result property="remark" column="sub_remark"/>
    </resultMap>


    <sql id="selectInventoryVo">
        SELECT
            i.id AS inventoryId,
            i.create_time AS createTime,
            i.flow_no AS flowNo,
            i.business_no AS businessNo,
            i.business_date AS businessTime,
            c.type AS contractType,
            case c.type when 0 then c.purchase_dept_name
                        when 1 then l.company_name
                        when 2 then c.lending_dept_name
                        when 3 then c.bailment_dept_name end as partA,
            case c.type when 0 then s.supplier_name
                        when 1 then c.rental_dept_name
                        when 2 then s1.supplier_name
                        when 3 then l1.company_name end as partB,
            i.contract_id AS contractId,
            c.contract_code AS contractCode,
            c.contract_name AS contractName,
            i.stock_type AS stockType,
            i.operator,
            i.remark,
            i.statistics_status as status,
            i.lessor_theoretical_weight AS total
        FROM inventory i
        left join sys_dept d on i.dept_id = d.dept_id
        LEFT JOIN contract c ON i.contract_id = c.id
        left join supplier s on s.id = c.purchase_supplier_id
        left join lessee l on l.id = c.rental_lessee_id
        left join supplier s1 on s1.id = c.lending_supplier_id
        left join lessee l1 on l1.id = c.bailment_lessee_id
    </sql>

    <select id="selectInventoryFee" parameterType="Long" resultMap="InventoryFeeResult">
        select
        c.id as sub2_id,
        c.inventory_id as sub2_inventory_id,
        c.material_category_id as sub2_material_category_id,
        c.material_spec_id as sub2_material_spec_id,
        c.fee_id as sub2_fee_id,
        c.received_count as sub2_received_count,
        c.charged_count as sub2_charged_count,
        c.remark as sub2_remark,
        c.total_amount as sub2_total_amount
        from inventory_fee c
        where c.inventory_id = #{inventoryId}
    </select>

    <select id="selectInventoryList" parameterType="InventoryParam" resultType="com.ruoyi.business.domain.vo.InventoryVo">
        <include refid="selectInventoryVo"/>
        <where>
            <if test="startDate != null">
                and i.business_date >= #{startDate}
            </if>
            <if test="endDate != null">
                and i.business_date &lt;= #{endDate}
            </if>
            <if test="stockType != null">
                and i.stock_type = #{stockType}
            </if>
            <if test="contractType != null">
                and c.type = #{contractType}
            </if>
            <if test="contractId != null">
                and c.id = #{contractId}
            </if>
            <if test="statisticsStatus != null">
                and i.statistics_status = #{statisticsStatus}
            </if>
            <if test="content != null and content != ''">
                and c.contract_name like concat('%',#{content},'%')
            </if>
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
        group by i.id
        order by i.create_time desc
    </select>

    <select id="selectInventoryBookList" parameterType="inventoryParam" resultType="com.ruoyi.business.domain.vo.InventoryBookVo">
        select
            i.id AS inventoryId,
            i.business_date AS businessDate,
            c.type as contractType,
            c.contract_code as contractCode,
            mc.`name` AS categoryName,
            ms.specs_name AS specsName,
            id.material_quantity AS materialQuantity,
            mc.m_unit AS materialUnits,
            ms.single_weight AS singleWeight,
            id.total AS total,
            i.flow_no AS flowNo,
            i.business_no as businessNo,
            dense_rank() over (partition by c.id order by i.create_time) as carSerial,
            i.destination AS destination,
            i.remark as remark
        FROM inventory i
                 LEFT JOIN contract c ON i.contract_id = c.id
                 LEFT JOIN inventory_detail id ON i.id = id.inventory_id
                 left join material_category mc on mc.id = id.material_category_id
                 left join material_specs ms on ms.id = id.material_spec_id
        <where>
            <if test="startDate != null">
                and i.business_date >= #{startDate}
            </if>
            <if test="endDate != null">
                and i.business_date &lt;= #{endDate}
            </if>
            <if test="stockType != null">
                and i.stock_type = #{stockType}
            </if>
            <if test="contractType != null">
                and c.type = #{contractType}
            </if>
            <if test="content != null and content != ''">
                and c.contract_name like concat('%',#{content},'%')
            </if>
        </where>
        order by c.id desc,i.id
    </select>

    <select id="selectInventoryById" parameterType="Long"
            resultMap="InventoryInventoryDetailResult">
        select
        a.id, a.business_date, a.flow_no, a.business_no, a.contract_id, a.stock_type, a.car_rental_fee, a.loading_fee, a.unloading_fee, a.origin, a.destination, a.transportation_unit_price, a.transport_unit, a.car_number, a.freight, a.lessor_theoretical_weight, a.supplier_theoretical_weight, a.warehouse_weight, a.scene_weight, a.total_miscel_fee, a.operator, a.resources, a.remark,  su.nick_name as create_by, a.create_time, a.update_by, a.update_time, a.is_deleted,
        b.id as sub_id,
        b.inventory_id as sub_inventory_id,
        b.external_contract_id as sub_external_contract_id,
        b.material_category_id as sub_material_category_id,
        b.material_spec_id as sub_material_spec_id,
        b.fee_id as sub_fee_id,
        IF(em.single_weight,ms.single_weight,null) as sub_default_weight,
        b.material_quantity as sub_material_quantity,
        IF(em.single_weight,em.single_weight,ms.single_weight) as sub_single_weight,
        b.remark as sub_remark,
        b.packages as sub_packages,
        ms.material as sub_material,
        mc.name as sub_name,
        ms.specs_name as sub_specs_name,
        ms.units as sub_units,
        ms.packages_number as sub_packages_number,
        mc.name       as sub2_name,
        ms.specs_name as sub2_specs_name
        from inventory a
        left join inventory_detail b on b.inventory_id = a.id
        left join material_specs ms on ms.id = b.material_spec_id
        left join material_category mc on mc.id = b.material_category_id
        left join external_material em on em.contract_id = b.external_contract_id and em.material_category_id = b.material_category_id and b.material_spec_id = em.material_spec_id
        left join sys_user su on su.user_name = a.create_by
        where a.id = #{id}
    </select>

    <select id="selectSettle" parameterType="string" resultType="com.ruoyi.business.domain.Settle">
        select
        SUM(IF(i.stock_type =0,lessor_theoretical_weight,0)) as theoreticalInTotal,
        SUM(IF(i.stock_type =1,lessor_theoretical_weight,0)) as theoreticalOutTotal,
        SUM(IF(i.stock_type =0,warehouse_weight,0)) as warehouseInTotal,
        SUM(IF(i.stock_type =1,warehouse_weight,0)) as warehouseOutTotal,
        SUM(IF(i.stock_type =0,scene_weight,0))as sceneInTotal,
        SUM(IF(i.stock_type =1,scene_weight,0))as sceneOutTotal
        from inventory i
        where i.id in
        <foreach item="inventoryIds" collection="array" open="(" separator="," close=")">
            #{inventoryIds}
        </foreach>
    </select>

    <insert id="insertInventory" parameterType="Inventory" useGeneratedKeys="true"
            keyProperty="id">
        insert into inventory
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="businessDate != null">business_date,
            </if>
            <if test="flowNo != null and flowNo != ''">flow_no,
            </if>
            <if test="businessNo != null and businessNo != ''">business_no,
            </if>
            <if test="contractId != null">contract_id,
            </if>
            <if test="stockType != null">stock_type,
            </if>
            <if test="carRentalFee != null">car_rental_fee,
            </if>
            <if test="loadingFee != null">loading_fee,
            </if>
            <if test="unloadingFee != null">unloading_fee,
            </if>
            <if test="origin != null">origin,
            </if>
            <if test="destination != null">destination,
            </if>
            <if test="transportationUnitPrice != null">transportation_unit_price,
            </if>
            <if test="transportUnit != null">transport_unit,
            </if>
            <if test="carNumber != null">car_number,
            </if>
            <if test="freight != null">freight,
            </if>
            <if test="lessorTheoreticalWeight != null">lessor_theoretical_weight,
            </if>
            <if test="supplierTheoreticalWeight != null">supplier_theoretical_weight,
            </if>
            <if test="warehouseWeight != null">warehouse_weight,
            </if>
            <if test="sceneWeight != null">scene_weight,
            </if>
            <if test="totalMiscelFee != null">total_miscel_fee,
            </if>
            <if test="operator != null">operator,
            </if>
            <if test="resources != null">resources,
            </if>
            <if test="remark != null">remark,
            </if>
            <if test="deptId != null">dept_id,
            </if>
            <if test="createBy != null">create_by,
            </if>
            <if test="createTime != null">create_time,
            </if>
            <if test="updateBy != null">update_by,
            </if>
            <if test="updateTime != null">update_time,
            </if>
            <if test="isDeleted != null">is_deleted,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="businessDate != null">#{businessDate},
            </if>
            <if test="flowNo != null and flowNo != ''">#{flowNo},
            </if>
            <if test="businessNo != null and businessNo != ''">#{businessNo},
            </if>
            <if test="contractId != null">#{contractId},
            </if>
            <if test="stockType != null">#{stockType},
            </if>
            <if test="carRentalFee != null">#{carRentalFee},
            </if>
            <if test="loadingFee != null">#{loadingFee},
            </if>
            <if test="unloadingFee != null">#{unloadingFee},
            </if>
            <if test="origin != null">#{origin},
            </if>
            <if test="destination != null">#{destination},
            </if>
            <if test="transportationUnitPrice != null">#{transportationUnitPrice},
            </if>
            <if test="transportUnit != null">#{transportUnit},
            </if>
            <if test="carNumber != null">#{carNumber},
            </if>
            <if test="freight != null">#{freight},
            </if>
            <if test="lessorTheoreticalWeight != null">#{lessorTheoreticalWeight},
            </if>
            <if test="supplierTheoreticalWeight != null">#{supplierTheoreticalWeight},
            </if>
            <if test="warehouseWeight != null">#{warehouseWeight},
            </if>
            <if test="sceneWeight != null">#{sceneWeight},
            </if>
            <if test="totalMiscelFee != null">#{totalMiscelFee},
            </if>
            <if test="operator != null">#{operator},
            </if>
            <if test="resources != null">#{resources},
            </if>
            <if test="remark != null">#{remark},
            </if>
            <if test="deptId != null">#{deptId},
            </if>
            <if test="createBy != null">#{createBy},
            </if>
            <if test="createTime != null">#{createTime},
            </if>
            <if test="updateBy != null">#{updateBy},
            </if>
            <if test="updateTime != null">#{updateTime},
            </if>
            <if test="isDeleted != null">#{isDeleted},
            </if>
        </trim>
    </insert>

    <update id="updateInventory" parameterType="Inventory">
        update inventory
        <trim prefix="SET" suffixOverrides=",">
            <if test="businessDate != null">business_date =
                #{businessDate},
            </if>
            <if test="flowNo != null and flowNo != ''">flow_no =
                #{flowNo},
            </if>
            <if test="businessNo != null and businessNo != ''">business_no =
                #{businessNo},
            </if>
            <if test="contractId != null">contract_id =
                #{contractId},
            </if>
            <if test="stockType != null">stock_type =
                #{stockType},
            </if>
            <if test="carRentalFee != null">car_rental_fee =
                #{carRentalFee},
            </if>
            <if test="loadingFee != null">loading_fee =
                #{loadingFee},
            </if>
            <if test="unloadingFee != null">unloading_fee =
                #{unloadingFee},
            </if>
            <if test="origin != null">origin =
                #{origin},
            </if>
            <if test="destination != null">destination =
                #{destination},
            </if>
            <if test="transportationUnitPrice != null">transportation_unit_price =
                #{transportationUnitPrice},
            </if>
            <if test="transportUnit != null">transport_unit =
                #{transportUnit},
            </if>
            <if test="carNumber != null">car_number =
                #{carNumber},
            </if>
            <if test="freight != null">freight =
                #{freight},
            </if>
            <if test="lessorTheoreticalWeight != null">lessor_theoretical_weight =
                #{lessorTheoreticalWeight},
            </if>
            <if test="supplierTheoreticalWeight != null">supplier_theoretical_weight =
                #{supplierTheoreticalWeight},
            </if>
            <if test="warehouseWeight != null">warehouse_weight =
                #{warehouseWeight},
            </if>
            <if test="sceneWeight != null">scene_weight =
                #{sceneWeight},
            </if>
            <if test="totalMiscelFee != null">total_miscel_fee =
                #{totalMiscelFee},
            </if>
            <if test="operator != null">operator =
                #{operator},
            </if>
            <if test="resources != null">resources =
                #{resources},
            </if>
            <if test="remark != null">remark =
                #{remark},
            </if>
            <if test="createBy != null">create_by =
                #{createBy},
            </if>
            <if test="createTime != null">create_time =
                #{createTime},
            </if>
            <if test="updateBy != null">update_by =
                #{updateBy},
            </if>
            <if test="updateTime != null">update_time =
                #{updateTime},
            </if>
            <if test="isDeleted != null">is_deleted =
                #{isDeleted},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteInventoryById" parameterType="Long">
        delete from inventory where id = #{id}
    </delete>

    <delete id="deleteInventoryByIds" parameterType="String">
        delete from inventory where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteInventoryDetailByInventoryIds" parameterType="String">
        delete from inventory_detail where inventory_id in
        <foreach item="inventoryId" collection="array" open="(" separator="," close=")">
            #{inventoryId}
        </foreach>
    </delete>

    <delete id="deleteInventoryDetailByInventoryId" parameterType="Long">
        delete from inventory_detail where inventory_id = #{inventoryId}
    </delete>

    <insert id="batchInventoryDetail">
        insert into inventory_detail
        ( id            , inventory_id            ,external_contract_id, material_category_id            , material_spec_id            ,fee_id, material_quantity            , packages,     total,           remark            , create_by            , create_time            , update_by            , update_time            , is_deleted) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id
                }, #{item.inventoryId
                }, #{item.externalContractId
                }, #{item.materialCategoryId
                }, #{item.materialSpecId
                }, #{item.feeId
                }, #{item.materialQuantity
                }, #{item.packages
                }, #{item.total
                }, #{item.remark
                }, #{item.createBy
                }, #{item.createTime
                }, #{item.updateBy
                }, #{item.updateTime
                }, #{item.isDeleted
                })
        </foreach>
    </insert>

    <delete id="deleteInventoryFeeByInventoryIds" parameterType="String">
        delete from inventory_fee where inventory_id in
        <foreach item="inventoryId" collection="array" open="(" separator="," close=")">
            #{inventoryId}
        </foreach>
    </delete>

    <delete id="deleteInventoryFeeByInventoryId" parameterType="Long">
        delete from inventory_fee where inventory_id = #{inventoryId}
    </delete>

    <insert id="batchInventoryFee">
        insert into inventory_fee
        ( id            , inventory_id            , material_category_id            , material_spec_id            , fee_id            , received_count            , charged_count            , total_amount, remark            , create_by            , create_time            , update_by            , update_time            , is_deleted) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id
                }, #{item.inventoryId
                }, #{item.materialCategoryId
                }, #{item.materialSpecId
                }, #{item.feeId
                }, #{item.receivedCount
                }, #{item.chargedCount
                }, #{item.totalAmount
                }, #{item.remark
                }, #{item.createBy
                }, #{item.createTime
                }, #{item.updateBy
                }, #{item.updateTime
                }, #{item.isDeleted
                })
        </foreach>
    </insert>

    <update id="updateStatisticsStatusById">
        update inventory set statistics_status = #{status}
        where id in
        <foreach collection="idList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <select id="selectResourcesById" resultType="java.lang.String">
        select resources from inventory
        where id in
        <foreach collection="idList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

</mapper>